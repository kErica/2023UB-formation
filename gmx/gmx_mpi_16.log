                      :-) GROMACS - gmx mdrun, 2016.3 (-:

                            GROMACS is written by:
     Emile Apol      Rossen Apostolov  Herman J.C. Berendsen    Par Bjelkmar   
 Aldert van Buuren   Rudi van Drunen     Anton Feenstra    Gerrit Groenhof  
 Christoph Junghans   Anca Hamuraru    Vincent Hindriksen Dimitrios Karkoulis
    Peter Kasson        Jiri Kraus      Carsten Kutzner      Per Larsson    
  Justin A. Lemkul   Magnus Lundborg   Pieter Meulenhoff    Erik Marklund   
   Teemu Murtola       Szilard Pall       Sander Pronk      Roland Schulz   
  Alexey Shvetsov     Michael Shirts     Alfons Sijbers     Peter Tieleman  
  Teemu Virolainen  Christian Wennberg    Maarten Wolf   
                           and the project leaders:
        Mark Abraham, Berk Hess, Erik Lindahl, and David van der Spoel

Copyright (c) 1991-2000, University of Groningen, The Netherlands.
Copyright (c) 2001-2017, The GROMACS development team at
Uppsala University, Stockholm University and
the Royal Institute of Technology, Sweden.
check out http://www.gromacs.org for more information.

GROMACS is free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License
as published by the Free Software Foundation; either version 2.1
of the License, or (at your option) any later version.

GROMACS:      gmx mdrun, version 2016.3
Executable:   /prod/GROMACS/2016-3/bin/gmx_mpi
Data prefix:  /prod/GROMACS/2016-3
Working dir:  /tmp/hpcnow1/838173.201805142242
Command line:
  gmx_mpi mdrun -ntomp 1 -npme 0 -ntomp_pme 0 -s ion_channel.tpr


Running on 2 nodes with total 16 cores, 16 logical cores
  Cores per node:            8
  Logical cores per node:    8
Hardware detected on host prades18 (the node of MPI rank 0):
  CPU info:
    Vendor: Intel
    Brand:  Intel(R) Xeon(R) CPU           E5472  @ 3.00GHz
    SIMD instructions most likely to fit this hardware: SSE4.1
    SIMD instructions selected at GROMACS compile time: SSE4.1

  Hardware topology: Only logical processor count

Reading file ion_channel.tpr, VERSION 5.1.4 (single precision)
Note: file tpx version 103, software tpx version 110
Changing nstlist from 10 to 20, rlist from 1 to 1.028

The number of OpenMP threads was set by environment variable OMP_NUM_THREADS to 1 (and the command-line setting agreed with that)
Using 16 MPI processes
Using 1 OpenMP thread per MPI process

starting mdrun 'Protein'
50000 steps,    125.0 ps.

step 40 Turning on dynamic load balancing, because the performance loss due to load imbalance is 10.0 %.

